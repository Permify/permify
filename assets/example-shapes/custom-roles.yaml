schema: |-
    entity user {}

    entity role {
        // Defines a relation where each role can be assigned to a user.
        relation assignee @user
    }

    entity dashboard {
        // Represents a relation where users (via their roles) can view the dashboard.
        relation view @role#assignee
        // Represents a relation where users (via their roles) can edit the dashboard.
        relation edit @role#assignee
    }

    entity task {
        // Represents a relation where users (via their roles) can view the task.
        relation view @role#assignee
        // Represents a relation where users (via their roles) can edit the task.
        relation edit @role#assignee
    }

relationships:
    - dashboard:project-progress#view@role:admin#assignee
    - dashboard:project-progress#view@role:member#assignee
    - dashboard:project-progress#edit@role:admin#assignee
    - task:website-design-review#view@role:admin#assignee
    - task:website-design-review#view@role:member#assignee
    - task:website-design-review#edit@role:admin#assignee
    - role:member#assignee@user:1

attributes:    

scenarios:
  - name: "User Dashboard View Permissions for project-progress"
    description: "Verifies if user:1 has view access to the 'project-progress' dashboard."
    checks:
      - entity: dashboard:project-progress
        subject: user:1
        assertions:
          view: true
  - name: "Role-Based Permissions for 'website-design-review' Task"
    description: "Evaluates the access rights for 'website-design-review' task based on roles. The admin role should have both view and edit permissions, whereas the member role should only have view permission."
    checks:
      - entity: "task:website-design-review"
        subject: "role:admin#assignee"
        assertions:
          view: true
          edit: true
      - entity: "task:website-design-review"
        subject: "role:member#assignee"
        assertions:
          view: true
          edit: false